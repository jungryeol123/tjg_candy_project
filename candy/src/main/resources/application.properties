spring.application.name=candy


#H2 ?????? ??  CREATE DATABASE candy CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
spring.datasource.url=jdbc:mysql://localhost:3306/candy?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=mysql1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# 엔티티 변경 시 DB 테이블 자동 수정
spring.jpa.hibernate.ddl-auto=update
# 실행된 SQL 쿼리 콘솔에 출력
spring.jpa.show-sql=true


# 네이버에서 발급받은 Client ID
spring.security.oauth2.client.registration.naver.client-id=Ap6rPG4ps7AgPG4l_DPi
# 네이버에서 발급받은 Client Secret (비밀번호 같은 역할)
spring.security.oauth2.client.registration.naver.client-secret=4LXJQBePIG
# 로그인 성공 후 리다이렉트될 URI
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
# OAuth2의 인증 방식 — 'authorization_code'는 일반적인 방식 (코드 발급 후 토큰 교환)
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# 로그인 시 네이버로부터 받아올 사용자 정보 범위 (이메일, 이름 등)
spring.security.oauth2.client.registration.naver.scope=name,email
# OAuth2 클라이언트 이름 — 네이버 로그인 버튼 등에 표시될 이름
spring.security.oauth2.client.registration.naver.client-name=Naver

# 네이버 로그인 요청 URL — 사용자가 로그인 버튼 클릭 시 이동할 주소
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# 네이버 액세스 토큰을 발급받는 API 주소
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# 사용자 정보를 가져오는 API 주소 (access token으로 호출)
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# “네이버 응답 JSON에서 사용자 정보는 response 객체 안에 있다.”
spring.security.oauth2.client.provider.naver.user-name-attribute=response



# ===============================
# ✅ 카카오 OAuth2 설정
# ===============================

# 🔑 카카오 REST API 키 (카카오 개발자 콘솔 > 내 애플리케이션 > 요약정보 > REST API 키)
spring.security.oauth2.client.registration.kakao.client-id=0c7f1ee8455f9a00270728ad7ad196ec

# 🔒 클라이언트 시크릿 (카카오는 보통 사용하지 않음 → 빈 값으로 둠)
spring.security.oauth2.client.registration.kakao.client-secret=

# 🔄 카카오 로그인 완료 후, 인가코드(code)를 받을 리디렉션 URI
# 반드시 카카오 개발자 콘솔에도 동일한 주소를 등록해야 함
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao

# 📥 OAuth2 인증 방식 (카카오 로그인은 authorization_code 방식 사용)
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code

# 🧾 카카오는 POST 방식으로 클라이언트 인증 처리
spring.security.oauth2.client.registration.kakao.client-authentication-method=none

# 🙍‍♂️ 요청할 사용자 정보 범위 (닉네임, 이메일)
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

# 💬 Spring Security 내부에서 식별할 클라이언트 이름 (표시용)
spring.security.oauth2.client.registration.kakao.client-name=Kakao


# ===============================
# ✅ 카카오 API 엔드포인트 설정
# ===============================

# 🔗 카카오 로그인 페이지 (사용자 인증 요청)
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize

# 🔗 액세스 토큰 발급 URL (인가 코드로 토큰을 교환하는 엔드포인트)
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token

# 🔗 사용자 정보 요청 URL (토큰을 이용해 프로필/이메일 등 조회)
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

# 🆔 사용자 정보 JSON 응답에서 사용자를 식별할 기본 키 속성 (기본값: id)
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
